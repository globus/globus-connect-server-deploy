;; Caller needs to define these three ARG's:
;; BOOTSTRAP_IMAGE: The existing docker image that we'll use to create our image.
;; BOOTSTRAP_IMAGE_PREREQS: Any prereqs needed by the bootstrap image
;; YUM_OPTIONS: Any options to pass to yum to install the target distro.
;; RELEASE_PKG: The target distro's base package(s) needed to create the image.
;;
;; The resulting image will be base_image
################################################################################
# We build the target image in 2 phases:
#
# - The first stage will create a root of the target distro using the base
#   image's commands. This results in a root that contains the yum/rpm commands
#   of the target distro but with a rpm database in the format used by the base
#   distro.
# - The second stage will copy the root to / to create the final image.
#
# We'll want to do this twice if the BOOTSTRAP_IMAGE is a different major number
# than the target image because the yum/rpm database format changes between
# releases so we'll want the final image to have been built by that distro's
# tools.
################################################################################

# Stage 1: Install the target distro into /$ROOT
FROM ${BOOTSTRAP_IMAGE} as stage_build_root

ARG BOOTSTRAP_IMAGE_PREREQS
ARG RELEASE_PKGS
ARG YUM_OPTIONS

ARG ROOT=/ROOT

# This is the base64 of partials/yum/
COPY <<EOF /yum.64
$YUM_64
EOF

RUN <<EOF
    set -e

    if [ -n "${BOOTSTRAP_IMAGE_PREREQS}" ]
    then
        yum install -y ${BOOTSTRAP_IMAGE_PREREQS}
    fi

    # Yum repo definitions
    cat /yum.64 | base64 -d | (cd /; tar zxf -)
    mkdir -p ${ROOT}/var/lib/rpm
    rpm --root ${ROOT} --initdb

    # Create these /dev/ entries to avoid 3rd party postinstall warnings
    DEV_LIST="null urandom"

    # Create /dev/ in ROOT
    if [ ! -d ${ROOT}/dev ]; then
        mkdir ${ROOT}/dev
        chmod 755 ${ROOT}/dev
    fi

    # Create the /dev/ entries we need
    for dev in ${DEV_LIST}; do
        if [ ! -c ${ROOT}/dev/${dev} ]; then
            mknod ${ROOT}/dev/${dev} c `stat /dev/${dev} --format="%t %T"`
            chmod 666 ${ROOT}/dev/${dev}
            declare ${dev}_CREATED=1
        fi
    done

    yum -y ${YUM_OPTIONS} --installroot ${ROOT} install ${RELEASE_PKGS} yum

    # Delete any /dev/ entries we create above since they may have incorrect
    # major/minor device numbers for the target distro (they'll have the major/minor
    # device numbers of the bootstrap distro).
    for dev in ${DEV_LIST}; do
        varname=${dev}_CREATED
        if [ "${!varname}" = "1" ]; then
            rm -f /dev/${dev}
        fi
    done
EOF

# Stage 2: Copy /$ROOT from stage 1 to /
FROM scratch as base_image

ARG ROOT=/ROOT
COPY --from=stage_build_root ${ROOT} /
